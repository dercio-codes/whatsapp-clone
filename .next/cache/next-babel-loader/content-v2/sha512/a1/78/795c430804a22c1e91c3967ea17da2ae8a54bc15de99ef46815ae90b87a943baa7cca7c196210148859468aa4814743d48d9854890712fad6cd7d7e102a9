{"ast":null,"code":"import _defineProperty from \"/home/dercio/AppWorld/appworld-templates/whatsapp-clone/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/dercio/AppWorld/appworld-templates/whatsapp-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/dercio/AppWorld/appworld-templates/whatsapp-clone/components/contacts/contactItem.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport { Box, Avatar, Drawer, Stack, Typography, Badge } from \"@mui/material\";\n\nvar ContactItem = function ContactItem(_ref) {\n  _s();\n\n  var name = _ref.name,\n      date = _ref.date,\n      userImage = _ref.userImage,\n      lastMessage = _ref.lastMessage,\n      messagesNumber = _ref.messagesNumber;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalState = _React$useState2[0],\n      setModalState = _React$useState2[1];\n\n  var handleAvatarClick = function handleAvatarClick() {\n    setModalState(!modalState);\n  };\n\n  var list = function list(anchor) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250\n      },\n      role: \"presentation\",\n      onClick: toggleDrawer(anchor, false),\n      onKeyDown: toggleDrawer(anchor, false),\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        children: ['Inbox', 'Starred', 'Send email', 'Drafts'].map(function (text, index) {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            disablePadding: true,\n            children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 36\n                }, _this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 52\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 15\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 13\n            }, _this)\n          }, text, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        children: ['All mail', 'Trash', 'Spam'].map(function (text, index) {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            disablePadding: true,\n            children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 36\n                }, _this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 52\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 15\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, _this)\n          }, text, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, _this);\n  };\n\n  var _React$useState3 = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  var toggleDrawer = function toggleDrawer(anchor, open) {\n    return function (event) {\n      if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n        return;\n      }\n\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, anchor, open)));\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box //   onClick={handleAvatarClick}\n  , {\n    sx: {\n      height: \"72px\",\n      justifyContent: \"space-between\",\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: \"0px 8px\",\n      \"&:hover\": {\n        background: \"rgba(1,1,1,0.5)\"\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      src: userImage,\n      sx: {\n        cursor: \"pointer\"\n      },\n      onClick: handleAvatarClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        borderTop: \"1px solid rgba(1,1,1 , 0.3)\",\n        width: \"85%\",\n        height: \"100%\",\n        padding: \"0px 4px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          // background:'yellow',\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontWeight: 700\n          },\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontWeight: 300,\n            fontSize: \"12px\"\n          },\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          // justifyContent: \"space-evenly\",\n          // background:'yellow',\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          noWrap: true,\n          sx: {\n            background: \"transparent\",\n            width: \"90%\",\n            marginRight: \"14px\"\n          },\n          children: lastMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Badge, {\n          badgeContent: messagesNumber,\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, _this), [\"left\", \"right\", \"top\", \"bottom\"].map(function (anchor) {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleDrawer(anchor, true),\n          children: anchor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Drawer, {\n          anchor: anchor,\n          open: state[anchor],\n          onClose: toggleDrawer(anchor, false),\n          children: list(anchor)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, _this)]\n      }, anchor, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ContactItem, \"hhqGBUyFZZc78Z6NdgVAQUHKRjA=\");\n\n_c = ContactItem;\nexport default ContactItem; // export default function TemporaryDrawer() {\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactItem\");","map":{"version":3,"sources":["/home/dercio/AppWorld/appworld-templates/whatsapp-clone/components/contacts/contactItem.jsx"],"names":["React","Box","Avatar","Drawer","Stack","Typography","Badge","ContactItem","name","date","userImage","lastMessage","messagesNumber","useState","modalState","setModalState","handleAvatarClick","list","anchor","width","toggleDrawer","map","text","index","top","left","bottom","right","state","setState","open","event","type","key","height","justifyContent","display","alignItems","padding","background","cursor","borderTop","flexDirection","fontWeight","fontSize","marginRight"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Box, Avatar, Drawer, Stack, Typography, Badge } from \"@mui/material\";\n\nconst ContactItem = ({\n  name,\n  date,\n  userImage,\n  lastMessage,\n  messagesNumber,\n}) => {\n  const [modalState, setModalState] = React.useState(false);\n\n  const handleAvatarClick = () => {\n    setModalState(!modalState);\n  };\n\n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem key={text} disablePadding>\n            <ListItemButton>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem key={text} disablePadding>\n            <ListItemButton>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n  \n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  return (\n    <Box\n      //   onClick={handleAvatarClick}\n      sx={{\n        height: \"72px\",\n        justifyContent: \"space-between\",\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: \"0px 8px\",\n        \"&:hover\": {\n          background: \"rgba(1,1,1,0.5)\",\n        },\n      }}\n    >\n      <Avatar\n        src={userImage}\n        sx={{ cursor: \"pointer\" }}\n        onClick={handleAvatarClick}\n      />\n      <Stack\n        sx={{\n          borderTop: \"1px solid rgba(1,1,1 , 0.3)\",\n          width: \"85%\",\n          height: \"100%\",\n          padding: \"0px 4px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            // background:'yellow',\n            alignItems: \"center\",\n          }}\n        >\n          <Typography sx={{ fontWeight: 700 }}>{name}</Typography>\n          <Typography sx={{ fontWeight: 300, fontSize: \"12px\" }}>\n            {date}\n          </Typography>\n        </Box>\n\n        <Box\n          sx={{\n            display: \"flex\",\n            // justifyContent: \"space-evenly\",\n            // background:'yellow',\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            noWrap\n            sx={{\n              background: \"transparent\",\n              width: \"90%\",\n              marginRight: \"14px\",\n            }}\n          >\n            {lastMessage}\n          </Typography>\n          <Badge badgeContent={messagesNumber} color=\"success\" />\n        </Box>\n      </Stack>\n\n\n      {[\"left\", \"right\", \"top\", \"bottom\"].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n          <Drawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n          >\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n      {/* <Drawer\n        anchor={\"left\"}\n        open={modalState}\n        sx={{\n          transition: \"2ms\",\n          height: \"100vh\",\n          width: \"400px\",\n          background: \"white\",\n          flexShrink: 0,\n        }}\n      ></Drawer> */}\n    </Box>\n  );\n};\n\nexport default ContactItem;\n\n// export default function TemporaryDrawer() {\n\n// }\n"]},"metadata":{},"sourceType":"module"}