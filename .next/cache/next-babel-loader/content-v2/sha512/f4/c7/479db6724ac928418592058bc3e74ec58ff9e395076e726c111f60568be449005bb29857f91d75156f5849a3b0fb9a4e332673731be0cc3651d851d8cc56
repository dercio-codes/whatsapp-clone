{"ast":null,"code":"import _defineProperty from \"/home/dercio/AppWorld/appworld-templates/whatsapp-clone/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/dercio/AppWorld/appworld-templates/whatsapp-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/dercio/AppWorld/appworld-templates/whatsapp-clone/components/contacts/contactItem.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport { Box, Avatar, Drawer, Stack, Typography, Badge, Button } from \"@mui/material\"; // import CloseIcon from '@mui/icons-material/Close';\n\nvar ContactItem = function ContactItem(_ref) {\n  _s();\n\n  var name = _ref.name,\n      date = _ref.date,\n      userImage = _ref.userImage,\n      lastMessage = _ref.lastMessage,\n      messagesNumber = _ref.messagesNumber;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalState = _React$useState2[0],\n      setModalState = _React$useState2[1];\n\n  var handleAvatarClick = function handleAvatarClick() {\n    setModalState(!modalState);\n  };\n\n  var list = function list(anchor) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: anchor === \"top\" || anchor === \"bottom\" ? \"auto\" : \"350px\",\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      role: \"presentation\",\n      onClick: toggleDrawer(anchor, false),\n      onKeyDown: toggleDrawer(anchor, false),\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          width: '100%',\n          height: '100px',\n          background: 'pink'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            flex: 1\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            flex: 3\n          },\n          children: \"Contact Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Avatar, {\n        src: userImage,\n        sx: {\n          cursor: \"pointer\",\n          minWidth: '250px',\n          minHeight: '250px'\n        },\n        onClick: toggleDrawer(anchor, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, _this);\n  };\n\n  var _React$useState3 = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  var toggleDrawer = function toggleDrawer(anchor, open) {\n    return function (event) {\n      if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n        return;\n      }\n\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, anchor, open)));\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box //   onClick={handleAvatarClick}\n  , {\n    sx: {\n      height: \"72px\",\n      justifyContent: \"space-between\",\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: \"0px 8px\",\n      \"&:hover\": {\n        background: \"rgba(1,1,1,0.5)\"\n      }\n    },\n    children: [[\"right\"].map(function (anchor) {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: userImage,\n          sx: {\n            cursor: \"pointer\"\n          },\n          onClick: toggleDrawer(anchor, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Drawer, {\n          anchor: anchor,\n          open: state[anchor],\n          onClose: toggleDrawer(anchor, false),\n          children: list(anchor)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, _this)]\n      }, anchor, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        borderTop: \"1px solid rgba(1,1,1 , 0.3)\",\n        width: \"85%\",\n        height: \"100%\",\n        padding: \"0px 4px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          // background:'yellow',\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontWeight: 700\n          },\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontWeight: 300,\n            fontSize: \"12px\"\n          },\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          // justifyContent: \"space-evenly\",\n          // background:'yellow',\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          noWrap: true,\n          sx: {\n            background: \"transparent\",\n            width: \"90%\",\n            marginRight: \"14px\"\n          },\n          children: lastMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Badge, {\n          badgeContent: messagesNumber,\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ContactItem, \"hhqGBUyFZZc78Z6NdgVAQUHKRjA=\");\n\n_c = ContactItem;\nexport default ContactItem; // export default function TemporaryDrawer() {\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactItem\");","map":{"version":3,"sources":["/home/dercio/AppWorld/appworld-templates/whatsapp-clone/components/contacts/contactItem.jsx"],"names":["React","Box","Avatar","Drawer","Stack","Typography","Badge","Button","ContactItem","name","date","userImage","lastMessage","messagesNumber","useState","modalState","setModalState","handleAvatarClick","list","anchor","width","display","flexDirection","alignItems","toggleDrawer","height","background","flex","cursor","minWidth","minHeight","top","left","bottom","right","state","setState","open","event","type","key","justifyContent","padding","map","borderTop","fontWeight","fontSize","marginRight"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Box,\n  Avatar,\n  Drawer,\n  Stack,\n  Typography,\n  Badge,\n  Button,\n} from \"@mui/material\";\n// import CloseIcon from '@mui/icons-material/Close';\n\nconst ContactItem = ({\n  name,\n  date,\n  userImage,\n  lastMessage,\n  messagesNumber,\n}) => {\n  const [modalState, setModalState] = React.useState(false);\n\n  const handleAvatarClick = () => {\n    setModalState(!modalState);\n  };\n\n  const list = (anchor) => (\n    <Box\n      sx={{\n           width: anchor === \"top\" || anchor === \"bottom\" ? \"auto\" : \"350px\" ,\n            display:'flex',\n            flexDirection:'column',\n            alignItems:'center'\n    }}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n        <Box sx={{ display:'flex' , width:'100%' , height:'100px',background:'pink'}}>\n            {/* <CloseIcon /> */}\n            <Button sx={{ flex:1 }}>Close</Button>\n            <Typography sx={{ flex: 3 }}>Contact Information</Typography>\n        </Box>\n      <Avatar\n        src={userImage}\n        sx={{ cursor: \"pointer\"  , minWidth:'250px' , minHeight:'250px'}}\n        onClick={toggleDrawer(anchor, true)}\n      />\n    </Box>\n  );\n\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  return (\n    <Box\n      //   onClick={handleAvatarClick}\n      sx={{\n        height: \"72px\",\n        justifyContent: \"space-between\",\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: \"0px 8px\",\n        \"&:hover\": {\n          background: \"rgba(1,1,1,0.5)\",\n        },\n      }}\n    >\n      {[\"right\"].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Avatar\n            src={userImage}\n            sx={{ cursor: \"pointer\" }}\n            onClick={toggleDrawer(anchor, true)}\n          />\n          <Drawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n          >\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n      <Stack\n        sx={{\n          borderTop: \"1px solid rgba(1,1,1 , 0.3)\",\n          width: \"85%\",\n          height: \"100%\",\n          padding: \"0px 4px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            // background:'yellow',\n            alignItems: \"center\",\n          }}\n        >\n          <Typography sx={{ fontWeight: 700 }}>{name}</Typography>\n          <Typography sx={{ fontWeight: 300, fontSize: \"12px\" }}>\n            {date}\n          </Typography>\n        </Box>\n\n        <Box\n          sx={{\n            display: \"flex\",\n            // justifyContent: \"space-evenly\",\n            // background:'yellow',\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            noWrap\n            sx={{\n              background: \"transparent\",\n              width: \"90%\",\n              marginRight: \"14px\",\n            }}\n          >\n            {lastMessage}\n          </Typography>\n          <Badge badgeContent={messagesNumber} color=\"success\" />\n        </Box>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default ContactItem;\n\n// export default function TemporaryDrawer() {\n\n// }\n"]},"metadata":{},"sourceType":"module"}